# Format  -- csv with semicolon as separator
# <options rule label>;  predicate ; next_rule if predicate is true;  next_rule if predicate is false
# predicate -- *must* evaluate to true or false
# A result is returned by prefixing with ':'
# So :Cinema will end the rule processing and return 'Cinema'


# Implementing 
# http://study.com/academy/lesson/what-is-a-decision-tree-examples-advantages-role-in-management.html

var family_visiting
var weather
var money
var known_weathers = {"sunny", "rainy", "windy" }
var rich_money = {"rich", "wealthy"}

start; family_visiting=="yes"; :Cinema

# The "not in" operator is implemented as !~
#  !known_weathers.contains(weather)
weather !~ known_weathers; :ERROR


weather=="sunny"; :Play Tennis
weather=="rainy"; :Stay In

# The "in" operator is implemented as =~
# rich_money.contains(money) 
money =~ rich_money; :Shopping
money == "poor"; :Cinema; :ERROR
